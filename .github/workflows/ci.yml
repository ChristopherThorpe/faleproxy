name: Faleproxy CI

on:
  push:
    branches:
      - '**'  # This will trigger on all branches

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm run test:ci -- --detectOpenHandles --forceExit
      
    - name: Upload coverage report
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.node-version }}
        path: coverage/
        retention-days: 7

  preview:
    needs: test
    if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master'  # Only run on non-main branches
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Vercel CLI
      run: npm install --global vercel@latest

    # Create .vercel/project.json
    - name: Create Vercel Project Configuration
      run: |
        mkdir -p .vercel
        echo '{"projectId":"${{ secrets.VERCEL_PROJECT_ID }}","orgId":"${{ secrets.VERCEL_ORG_ID }}"}' > .vercel/project.json
      
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=preview
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      
    - name: Build Project Artifacts
      run: vercel build
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      
    - name: Deploy to Vercel (Preview)
      id: deploy-preview
      run: |
        DEPLOYMENT_URL=$(vercel deploy --prebuilt)
        echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

    - name: Comment Preview URL
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const issue_number = context.issue.number;
          const owner = context.repo.owner;
          const repo = context.repo.repo;
          
          if (issue_number) {
            github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: `ðŸš€ Preview deployment is ready!\n\nDeployed to: ${process.env.DEPLOYMENT_URL}`
            });
          }
      env:
        DEPLOYMENT_URL: ${{ steps.deploy-preview.outputs.deployment_url }}
        
  deploy-production:
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'  # Only run on main/master branch
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Vercel CLI
      run: npm install --global vercel@latest

    # Create .vercel/project.json
    - name: Create Vercel Project Configuration
      run: |
        mkdir -p .vercel
        echo '{"projectId":"${{ secrets.VERCEL_PROJECT_ID }}","orgId":"${{ secrets.VERCEL_ORG_ID }}"}' > .vercel/project.json
      
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=production
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      
    - name: Build Project Artifacts
      run: vercel build --prod
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      
    - name: Deploy to Production
      run: vercel deploy --prebuilt --prod
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
