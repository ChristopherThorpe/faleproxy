name: Faleproxy CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm run test:ci
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

  deploy_production:
    needs: test
    # Run production only on main/master and only if tests succeed
    if: ${{ success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Pull Vercel Environment Information for Production
        run: |
          vercel pull --yes --environment=production \
          --token=${{ secrets.VERCEL_TOKEN }} \
          --org=${{ secrets.VERCEL_ORG_ID }} \
          --project=${{ secrets.VERCEL_PROJECT_ID }}
      
      - name: Build Project Artifacts for Production
        run: |
          vercel build --prod \
          --token=${{ secrets.VERCEL_TOKEN }} \
          --org=${{ secrets.VERCEL_ORG_ID }} \
          --project=${{ secrets.VERCEL_PROJECT_ID }}
      
      - name: Deploy Project Artifacts to Vercel Production
        run: |
          vercel deploy --prebuilt --prod \
          --token=${{ secrets.VERCEL_TOKEN }} \
          --org=${{ secrets.VERCEL_ORG_ID }} \
          --project=${{ secrets.VERCEL_PROJECT_ID }}

  deploy_preview:
    # This job runs for any branch other than main/master.
    # We choose option (b): preview deployments will run regardless of test status.
    if: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Pull Vercel Environment Information for Preview
        run: |
          vercel pull --yes --environment=preview \
          --token=${{ secrets.VERCEL_TOKEN }} \
          --org=${{ secrets.VERCEL_ORG_ID }} \
          --project=${{ secrets.VERCEL_PROJECT_ID }}
      
      - name: Build Project Artifacts for Preview
        run: |
          vercel build --environment=preview \
          --token=${{ secrets.VERCEL_TOKEN }} \
          --org=${{ secrets.VERCEL_ORG_ID }} \
          --project=${{ secrets.VERCEL_PROJECT_ID }}
      
      - name: Deploy Preview to Vercel
        run: |
          vercel deploy --prebuilt --environment=preview \
          --token=${{ secrets.VERCEL_TOKEN }} \
          --org=${{ secrets.VERCEL_ORG_ID }} \
          --project=${{ secrets.VERCEL_PROJECT_ID }}

